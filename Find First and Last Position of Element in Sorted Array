/*
Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].

You must write an algorithm with O(log n) runtime complexity.
*/




class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int sv=nums.size();
        vector<int>v;
        for(int i=0;i<sv;i++)
        {
            if(nums[i]==target)
            v.push_back(i);
        }
        int size=v.size();
        if(size==1)
          v.push_back(v[0]);
        if(size>2)
          v.erase(v.begin()+1,v.end()-1);
        if(v.empty())
        {
         v.push_back(-1);
         v.push_back(-1);
        }
        return v;
    }
};
