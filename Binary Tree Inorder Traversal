//Given the root of a binary tree, return the inorder traversal of its nodes' values.




/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        typedef TreeNode node;
        vector<int>v;
        stack<node*>s;
        node*curr=root;
        while(1)
        {
        while(curr!=NULL)
        {
            s.push(curr);
            curr=curr->left;
        }
        if(s.empty())
        break;
        node*temp=s.top();
        s.pop();
        v.push_back(temp->val);
        curr=temp->right;
    }
    return v;
    }
};
