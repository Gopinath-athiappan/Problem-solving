Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.





/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int>v;
        if(!root) return v;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty())
        {
            vector<int>v1;
            int count=q.size();
            while(count!=0)
            {
              TreeNode*curr = q.front();
              q.pop();
              v1.push_back(curr->val);
              if(curr->left)  q.push(curr->left);
              if(curr->right)  q.push(curr->right); 
              --count;
            }
            v.push_back(v1[v1.size()-1]);
        }
        return v;  
    }
};
