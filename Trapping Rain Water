/*Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
*/


int max(int a,int b)
{
    if (a<b) 
        return b;
    else 
        return a;
}
int min(int a,int b)
{
    if (a<b)
        return a;
    else 
        return b;
}
int trap(int* a, int n){
    int res=0;
    int leftmax[n],rightmax[n];
    leftmax[0]=a[0];
    for (int i=1;i<n;i++)
        leftmax[i]= max(a[i],leftmax[i-1]);
    rightmax[n-1]=a[n-1];
    for( int i=n-2;i>=0;i--)
        rightmax[i]=max(a[i],rightmax[i+1]);
    for (int i=0;i<n;i++)
        res = res + min(leftmax[i],rightmax[i])-a[i];
    return res;
}
